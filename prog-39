#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

#define ALPHABET_SIZE 26
void letterFrequencyAttack(char ciphertext[], int topPlaintexts) {
    int frequencies[ALPHABET_SIZE] = {0};
    int i, j, shift, maxIndex;
    
    for (i = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            char uppercaseChar = toupper(ciphertext[i]);
            frequencies[uppercaseChar - 'A']++;
        }
    }
    for (i = 0; i < topPlaintexts; i++) 
	{
        maxIndex = 0;
        for (j = 1; j < ALPHABET_SIZE; j++) {
            if (frequencies[j] > frequencies[maxIndex]) {
                maxIndex = j;
            }
        }
        shift = (maxIndex - ('E' - 'A') + ALPHABET_SIZE) % ALPHABET_SIZE;

        printf("Plaintext %d (Shift %d): ", i + 1, shift);
        for (j = 0; ciphertext[j] != '\0'; j++) {
            if (isalpha(ciphertext[j])) {
                char uppercaseChar = toupper(ciphertext[j]);
                char decryptedChar = 'A' + (uppercaseChar - 'A' - shift + ALPHABET_SIZE) % ALPHABET_SIZE;
                printf("%c", islower(ciphertext[j]) ? tolower(decryptedChar) : decryptedChar);
            } else {
                printf("%c", ciphertext[j]);
            }
        }
        printf("\n");
        frequencies[maxIndex] = 0;
    }
}

int main() {
    char ciphertext[] = "WKLV LV D WHVW PHVVDJH.";
    int topPlaintexts = 5;

    printf("Ciphertext: %s\n", ciphertext);
    printf("Performing Letter Frequency Attack...\n\n");
    
    letterFrequencyAttack(ciphertext, topPlaintexts);

    return 0;
}

OUTPUT:
Ciphertext: WKLV LV D WHVW PHVVDJH.
Performing Letter Frequency Attack...

Plaintext 1 (Shift 17): FTUE UE M FQEF YQEEMSQ.
Plaintext 2 (Shift 3): THIS IS A TEST MESSAGE.
Plaintext 3 (Shift 18): ESTD TD L EPDE XPDDLRP.
Plaintext 4 (Shift 25): XLMW MW E XIWX QIWWEKI.
Plaintext 5 (Shift 7): PDEO EO W PAOP IAOOWCA.
